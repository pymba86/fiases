# GitLab CI help:      <https://docs.gitlab.com/ee/ci/yaml/>
# GitLab environments: <https://docs.gitlab.com/ee/ci/variables/>
image: docker:stable

variables:
  APP_IMAGE: $CI_REGISTRY_IMAGE/app
  SOURCES_IMAGE: $CI_REGISTRY_IMAGE/sources
  NGINX_IMAGE: $CI_REGISTRY_IMAGE/nginx

stages:
  - prepare
  - test
  - build
  - deploy

cache:
  key: "${CI_PROJECT_PATH_SLUG}-${CI_COMMIT_REF_SLUG}"
  paths:
    - "${CI_PROJECT_DIR}/.build/"
    - src/vendor/
    - src/node_modules/

before_script:
  - mkdir -p "${CI_PROJECT_DIR}/.build"
  - function composer_install() {
    composer install --no-interaction --ansi --no-suggest --prefer-dist;
    }

# Job template for a working with docker
.with-docker: &with-docker
  services:
    - docker:dind
  before_script:
    - which make || ( apk add --no-cache make > /dev/null )
    - mkdir -p "${CI_PROJECT_DIR}/.build"
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" registry.gitlab.com
  script: /bin/true
  cache: {} # Disable cache during work with docker

# ----------------------------------------------------------------------------------------------------------------------

Build service images (branch):
  <<: *with-docker
  stage: prepare
  only: &branch-only
    - branches
  except: &build-image-except
    variables:
      - $CI_COMMIT_TITLE =~ /\[skip.?build\]/i
  variables:
    PULL_TAG: "$CI_COMMIT_REF_SLUG" # Here it looks like 'master' or 'some-branch-name'
    PUBLISH_TAGS: "$CI_COMMIT_REF_SLUG"
  script: &build-app-image-script
    - make PULL_TAG="$PULL_TAG" PUBLISH_TAGS="$PUBLISH_TAGS" app-push
    - make PULL_TAG="$PULL_TAG" PUBLISH_TAGS="$PUBLISH_TAGS" nginx-push

Build service images (latest):
  <<: *with-docker
  stage: prepare
  only: &latest-only
    refs:
      - master
  except: *build-image-except
  variables:
    PULL_TAG: latest
    PUBLISH_TAGS: latest
  script: *build-app-image-script

Build service images (stable):
  <<: *with-docker
  stage: prepare
  only: &stable-only
    - /^v\d+\.\d+\.\d+$/
  except: &stable-except
    - branches
  variables:
    PULL_TAG: "$CI_COMMIT_REF_NAME" # Here it looks like 'v1.2.0'
    PUBLISH_TAGS: "$CI_COMMIT_REF_NAME stable"
  script: *build-app-image-script

# ----------------------------------------------------------------------------------------------------------------------

Execute phpunit (branch): &execute-phpunit
  stage: test
  image: $APP_IMAGE:$CI_COMMIT_REF_SLUG
  only: *branch-only
  except: &tests-except
    variables:
      - $CI_COMMIT_TITLE =~ /\[skip.?test\]/i
  coverage: '/^\s*Lines:\s*\d+.\d+\%/'
  script:
    - docker-php-ext-enable xdebug
    - cd ./src
    - composer_install

Execute phpunit (stable):
  <<: *execute-phpunit
  image: $APP_IMAGE:$CI_COMMIT_REF_NAME
  only: *stable-only

# ----------------------------------------------------------------------------------------------------------------------

Build sources image (branch):
  <<: *with-docker
  stage: build
  only: *branch-only
  except: *build-image-except
  variables:
    TAG_NAME: $CI_COMMIT_REF_SLUG # Here it looks like 'master' or 'some-branch-name'
    PUBLISH_TAGS: "$CI_COMMIT_REF_SLUG"
  script: &build-sources-image-script
    - docker run --rm -u "$(id -u):$(id -g)" -v "$(pwd)/src:/app:rw"
      $APP_IMAGE:$TAG_NAME composer install --no-interaction --ansi --no-suggest --prefer-dist --no-dev
    - make PUBLISH_TAGS="$PUBLISH_TAGS" sources-push

Build sources image (latest):
  <<: *with-docker
  stage: build
  only: *latest-only
  except: *build-image-except
  variables:
    TAG_NAME: latest
    PUBLISH_TAGS: latest
  script: *build-sources-image-script

Build sources image (stable):
  <<: *with-docker
  stage: build
  only: *stable-only
  except: *stable-except
  variables:
    TAG_NAME: $CI_COMMIT_REF_NAME # Here it looks like 'v1.2.0'
    PUBLISH_TAGS: "$CI_COMMIT_REF_NAME stable"
  script: *build-sources-image-script

# ----------------------------------------------------------------------------------------------------------------------

Deploy services 82.202.221.170 (latest):
  stage: deploy
  only: *latest-only
  except: *build-image-except
  variables:
    DOCKER_HOST: tcp://82.202.221.170:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "~/certs"
  script:
    - mkdir -p $DOCKER_CERT_PATH
    - echo "$TLSCACERT" > $DOCKER_CERT_PATH/ca.pem
    - cat $DOCKER_CERT_PATH/ca.pem
    - echo "$TLSCERT" > $DOCKER_CERT_PATH/cert.pem
    - echo "$TLSKEY" > $DOCKER_CERT_PATH/key.pem
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" registry.gitlab.com
    - docker stack deploy -c docker-swarm.yml master --with-registry-auth
  environment:
    name: master
    url: http://82.202.221.170